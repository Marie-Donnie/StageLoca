#+TITLE: Report for : Un intergiciel d’une base de données NewSQL qui considère la localité de l’application cliente -- 3rd week --
#+AUTHOR: Marie Delavergne

* Monday 29 January [2018-01-29 lun.]

- Back to testing

** Tests

- Launching ombt-orchestrator with the fewest possible installations
  + site.yml
    #+BEGIN_EXAMPLE
---
- name: Common configuration
  hosts: all
  roles:
    - common
    - registry

- name: Control-bus deployment
  hosts: control-bus
  roles:
      - rabbitmq-control

- name: RabbitMQ deployment
  hosts:
    - bus
  roles:
    - { role: rabbitmq,
        when: broker == "rabbitmq" }
    #+END_EXAMPLE
  + conf.yaml
    #+BEGIN_EXAMPLE
  resources:
    machines:
    - roles:
    - control-bus
    - ombt-control
    - control
    - registry
    cluster: paravance
    nodes: 1
    primary_network: n1
    secondary_networks: []
    - roles:
    - bus
    cluster: paravance
    nodes: 1
    primary_network: n1
    secondary_networks: []
    - roles:
    - ombt-server
    cluster: paravance
    nodes: 1
    primary_network: n1
    secondary_networks: []
    - roles:
    - ombt-client
    cluster: paravance
    nodes: 1
    primary_network: n1
    secondary_networks: []
    networks:
    - id: n1
    roles:
    - control_network
    - internal_network
    type: prod
    site: rennes
    #+END_EXAMPLE

    - I also removed hostname from the cockroach deploys

- Then, to test the parameters I need
  + to pull cockroach from dockerhub =docker pull cockroachdb/cockroach=
  + on the first node:
    #+BEGIN_SRC
docker run -d \
--name=roach1 \
-p 26257:26257 -p 8080:8080  \
-v "${PWD}/cockroach-data/roach1:/cockroach/cockroach-data"  \
cockroachdb/cockroach start --insecure
    #+END_SRC

  + on the second node:
    #+BEGIN_SRC
docker run -d \
--name=roach2 \
-v "${PWD}/cockroach-data/roach2:/cockroach/cockroach-data" \
cockroachdb/cockroach start --insecure --join=roach1
    #+END_SRC
  + then I try to connect to cockroach:
    - on roach1, everything is ok, but on roach 2:
      #+BEGIN_EXAMPLE
root@paravance-37:~# docker exec -it roach2 ./cockroach sql --insecure
# Welcome to the cockroach SQL interface.
# All statements must be terminated by a semicolon.
# To exit: CTRL + D.
#
Error: unable to connect or connection lost.

Please check the address and credentials such as certificates (if attempting to
communicate with a secure cluster).

read tcp 127.0.0.1:37504->127.0.0.1:26257: read: connection reset by peer
Failed running "sql"
      #+END_EXAMPLE
  + Of course, I forgot I have to join paravance-4:
      #+BEGIN_SRC
docker run -d \
--name=roach2 \
-v "${PWD}/cockroach-data/roach2:/cockroach/cockroach-data" \
cockroachdb/cockroach start --insecure --join=paravance-4.rennes.grid5000.fr
    #+END_SRC

  + Doesn't work, so I add ~--logtostderr~ to check docker logs
    #+BEGIN_EXAMPLE
I180129 12:07:29.071646 68 cli/start.go:503  starting cockroach node
I180129 12:07:29.072280 68 storage/engine/rocksdb.go:411  opening rocksdb instance at "/cockroach/cockroach-data/local"
W180129 12:07:29.206969 68 gossip/gossip.go:1241  [n?] no incoming or outgoing connections
I180129 12:07:29.207078 68 storage/engine/rocksdb.go:411  opening rocksdb instance at "/cockroach/cockroach-data"
I180129 12:07:29.211284 37 gossip/client.go:129  [n?] started gossip client to paravance-4.rennes.grid5000.fr:26257
I180129 12:07:29.286550 68 server/config.go:542  [n?] 1 storage engine initialized
I180129 12:07:29.286570 68 server/config.go:544  [n?] RocksDB cache size: 128 MiB
I180129 12:07:29.286584 68 server/config.go:544  [n?] store 0: RocksDB, max size 0 B, max open file limit 11384
I180129 12:07:29.286849 68 server/server.go:839  [n?] no stores bootstrapped and --join flag specified, awaiting init command.
I180129 12:07:29.287190 68 storage/stores.go:303  [n?] read 0 node addresses from persistent storage
I180129 12:07:29.287265 68 storage/stores.go:322  [n?] wrote 1 node addresses to persistent storage
I180129 12:07:29.287286 68 server/node.go:606  [n?] connecting to gossip network to verify cluster ID...
I180129 12:07:29.287315 68 server/node.go:631  [n?] node connected via gossip and verified as part of cluster "5e1c6f2d-81d2-42a8-96f3-1344a6bf97c1"
I180129 12:07:29.288278 47 vendor/google.golang.org/grpc/grpclog/grpclog.go:75  grpc: addrConn.resetTransport failed to create client transport: connection error: desc = "transport: Error while dialing dial tcp: lookup f936b54b585a on 172.16.111.118:53: no such host"; Reconnecting to {f936b54b585a:26257 <nil>}
    #+END_EXAMPLE

  + After having tried loads of combination for the connection on paravance-4 and 37, the only combination that enabled me to connect to the sql database on paravance-37 was:
    #+BEGIN_SRC
root@paravance-4:~# docker run -d --name=roach1 -p 26257:26257 --hostname=paravance-4.rennes.grid5000.fr -v "${PWD}/cockroach-data/roach1:/cockroach/cockroach-data" cockroachdb/cockroach start --insecure
root@paravance-37:~# docker run -d --name=roach2 -v "${PWD}/cockroach-data/roach2:/cockroach/cockroach-data" cockroachdb/cockroach start --insecure --join=paravance-4.rennes.grid5000.fr:26257 --logtostderr
    #+END_SRC

  + But this way, I get the same error =pq: no inbound stream connection= when trying to make a SELECT * FROM <table> on a node that joined

  + While trying to make it work using researchs on the log errors, I managed to find that I'll probably need to ~--advertise-host:<ip-server>~ (on several sources, especially thanks to [[https://www.digitalocean.com/community/tutorials/how-to-deploy-cockroachdb-on-a-three-node-cluster-on-ubuntu-16-04][digital ocean tutorial]], that helped me understand that it wasn't enough to have advertise-host, but the docker requirements also)
    - I collected the ip for the servers:
      #+BEGIN_EXAMPLE
paravance-37.rennes.grid5000.fr 172.16.96.37
paravance-38.rennes.grid5000.fr 172.16.96.38
paravance-39.rennes.grid5000.fr 172.16.96.39
paravance-4.rennes.grid5000.fr 172.16.96.4
      #+END_EXAMPLE
    - Tried different combinations once again until I managed to have the one I really need:
      + on paravance-4:
	#+BEGIN_EXAMPLE
docker run -d --name=roach1 -p 26257:26257 --hostname=paravance-4.rennes.grid5000.fr -v "${PWD}/cockroach-data/roach1:/cockroach/cockroach-data" cockroachdb/cockroach start --insecure --advertise-host=172.16.96.4
	#+END_EXAMPLE
      + on paravance-37/38/39 (with the corresponding number of course):
	#+BEGIN_EXAMPLE
dockerun -d --name=roach2 -p 26257:26257 -v "${PWD}/cockroach-data/roach2:/cockroach/cockroach-data" cockroachdb/cockroach start --insecure --join=paravance-4.rennes.grid5000.fr --advertise-host=172.16.96.37
	#+END_EXAMPLE
    - A couple of notes:
      + I need at least three nodes for it to work
      + I managed this way to make every ~select~ and ~insert~ I want on the three nodes
      + The port is probably required so it can go through the docker
      + I kept the hostname on the master, tried without it and it worked though, so I'll probably keep it because it is pretty handy for the template not having to know the ip of the master
      + I don't have a lot of modifications to make on my ombt-orchestrator, I actually think it only lacked the ~advertise-host~

- Now I have to apply this to ombt-orchestrator
  + I need to get the host ip, so I ask Matthieu, who tells me, with [[https://github.com/msimonin/ombt-orchestrator/search?utf8=%E2%9C%93&q=hostvars&type=][some examples]]:
    #+BEGIN_EXAMPLE
    hostvars[<inventory name>]['ansible_<interface_name>'].ipv4.address
    #+END_EXAMPLE
  + For my case, I'll use:
    #+BEGIN_EXAMPLE
    --advertise-host="{{ hostvars[inventory_hostname]['ansible_' + control_network]['ipv4']['address'] }}"
    #+END_EXAMPLE
  + Of course when deploying this way it never passes the
    #+BEGIN_EXAMPLE
# Welcome to the cockroach SQL interface.
# All statements must be terminated by a semicolon.
# To exit: CTRL + D.
    #+END_EXAMPLE
  + A bit of debugging:
    #+BEGIN_EXAMPLE
TASK [cockroachdb : debug] ****************************************************************************
ok: [paravance-38.rennes.grid5000.fr] => {
    "msg": "Ip: 172.16.96.38"
}
ok: [paravance-39.rennes.grid5000.fr] => {
    "msg": "Ip: 172.16.96.39"
}
ok: [paravance-4.rennes.grid5000.fr] => {
    "msg": "Ip: 172.16.96.4"
}
    #+END_EXAMPLE
  + It seems that it's better to keep the hostname as the true hostname, so I dig a little deeper
    - For the record, the dict from ~{{ hostvars[groups['cockroachdb-master'][0]] }}~ on paravance-4 (which was not the master):
      #+BEGIN_EXAMPLE
ok: [paravance-4.rennes.grid5000.fr] => {
"msg": "Ip: 172.16.96.4, join: {u'module_setup': True, u'ansible_distribution_version': u'9.3', u'ansible_env': {u'LC_NUMERIC': u'fr_FR.UTF-8', u'SSH_CLIENT': u'172.16.111.106 53768 22', u'LOGNAME': u'root', u'USER': u'root', u'HOME': u'/root', u'LC_PAPER': u'fr_FR.UTF-8', u'PATH': u'/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', u'LANG': u'en_US.UTF-8', u'TERM': u'xterm', u'SHELL': u'/bin/bash', u'LANGUAGE': u'en_US:en', u'SHLVL': u'1', u'LC_MONETARY': u'fr_FR.UTF-8', u'XDG_RUNTIME_DIR': u'/run/user/0', u'LC_ADDRESS': u'fr_FR.UTF-8', u'LC_ALL': u'en_US.UTF-8', u'XDG_SESSION_ID': u'13', u'_': u'/bin/sh', u'LC_IDENTIFICATION': u'fr_FR.UTF-8', u'SSH_TTY': u'/dev/pts/1', u'LC_TELEPHONE': u'fr_FR.UTF-8', u'LC_MEASUREMENT': u'fr_FR.UTF-8', u'PWD': u'/root', u'LC_NAME': u'fr_FR.UTF-8', u'MAIL': u'/var/mail/root', u'LC_TIME': u'fr_FR.UTF-8', u'SSH_CONNECTION': u'172.16.111.106 53768 172.16.96.37 22'}, u'ansible_userspace_bits': u'64', u'ansible_architecture': u'x86_64', u'ansible_default_ipv4': {u'macaddress': u'ec:f4:bb:d0:f0:d8', u'network': u'172.16.96.0', u'mtu': 1500, u'broadcast': u'172.16.111.255', u'alias': u'eth0', u'netmask': u'255.255.240.0', u'address': u'172.16.96.37', u'interface': u'eth0', u'type': u'ether', u'gateway': u'172.16.111.254'}, u'ansible_swapfree_mb': 3813, u'ansible_default_ipv6': {}, 'group_names': [u'cockroachdb-master', u'control', u'control-bus', u'ombt-control', u'registry'], u'ansible_cmdline': {u'biosdevname': u'0', u'modprobe.blacklist': u'myri10ge', u'console': u'ttyS0,115200', u'root': u'/dev/sda3', u'net.ifnames': u'0'}, u'ansible_selinux': False, 'ansible_version': {'major': 2, 'full': '2.3.3.0', 'string': '2.3.3.0', 'minor': 3, 'revision': 3}, u'ansible_userspace_architecture': u'x86_64', u'ansible_product_uuid': u'4C4C4544-0033-5210-8047-B2C04F473432', 'inventory_file': u'/home/madelavergne/ombt-orchestrator/enos_2018-01-29T17:16:22.476005/hosts', u'ansible_pkg_mgr': u'apt', u'ansible_distribution': u'Debian', u'control_network': u'eth0', u'ansible_all_ipv6_addresses': [u'fe80::eef4:bbff:fed0:f0d8', u'fe80::42:2dff:feca:1a77', u'fe80::e418:3aff:fee3:c602'], u'ansible_uptime_seconds': 2081, u'ansible_kernel': u'4.9.0-4-amd64', u'ansible_system_capabilities_enforced': u'True', u'ansible_python': {u'executable': u'/usr/bin/python', u'version': {u'micro': 13, u'major': 2, u'releaselevel': u'final', u'serial': 0, u'minor': 7}, u'type': u'CPython', u'has_sslcontext': True, u'version_info': [2, 7, 13, u'final', 0]}, u'ansible_user_shell': u'/bin/bash', u'ansible_product_serial': u'23RGG42', u'ansible_form_factor': u'Rack Mount Chassis', 'enos_action': 'deploy', u'ansible_fips': False, u'ansible_user_id': u'root', 'inventory_hostname': u'paravance-37.rennes.grid5000.fr', u'ansible_processor_vcpus': 32, u'ansible_docker0': {u'macaddress': u'02:42:2d:ca:1a:77', u'features': {}, u'interfaces': [u'veth2d3cb70'], u'mtu': 1500, u'active': True, u'promisc': False, u'stp': False, u'ipv4': {u'broadcast': u'172.17.255.255', u'netmask': u'255.255.0.0', u'network': u'172.17.0.0', u'address': u'172.17.0.1'}, u'ipv6': [{u'scope': u'link', u'prefix': u'64', u'address': u'fe80::42:2dff:feca:1a77'}], u'device': u'docker0', u'type': u'bridge', u'id': u'8000.02422dca1a77'}, u'internal_network': u'eth0', u'ansible_user_gid': 0, u'ansible_system_vendor': u'Dell Inc.', u'ansible_virtualization_role': u'host', u'ansible_swaptotal_mb': 3813, 'broker': u'rabbitmq', u'ansible_distribution_major_version': u'9', 'groups': {u'control': [u'paravance-37.rennes.grid5000.fr'], 'all': [u'paravance-37.rennes.grid5000.fr', u'paravance-4.rennes.grid5000.fr', u'paravance-38.rennes.grid5000.fr', u'paravance-39.rennes.grid5000.fr'], u'ombt-client': [u'paravance-4.rennes.grid5000.fr'], u'bus': [u'paravance-38.rennes.grid5000.fr'], 'ungrouped': [], u'ombt-control': [u'paravance-37.rennes.grid5000.fr'], u'registry': [u'paravance-37.rennes.grid5000.fr'], u'ombt-server': [u'paravance-39.rennes.grid5000.fr'], u'control-bus': [u'paravance-37.rennes.grid5000.fr'], u'cockroachdb': [u'paravance-38.rennes.grid5000.fr', u'paravance-39.rennes.grid5000.fr', u'paravance-4.rennes.grid5000.fr'], u'cockroachdb-master': [u'paravance-37.rennes.grid5000.fr']}, u'ansible_real_group_id': 0, u'ansible_lsb': {u'major_release': u'9', u'release': u'9.3', u'codename': u'stretch', u'description': u'Debian GNU/Linux 9.3 (stretch)', u'id': u'Debian'}, u'enos_devices': ['eth0'], u'ansible_machine': u'x86_64', u'ansible_ssh_host_key_rsa_public': u'AAAAB3NzaC1yc2EAAAADAQABAAABAQC43T7dAxWbnsJGQ/kcHOWDXfS7ElA9+BO3RBPqPu775tZVNm7vpcmVrRrBcCH7WDcC49c8Sp8U7ZsPVgclQmIdhMlnltIpM6IcmYkWjiGcTyKoH9dQc7yUKNJFDzheV0LybOr0ciyjgvkcvcSexges5jOPhMmPfsTDM4ig16p8lmhwkWW04IKqQaZkNZNDAkymS03GlGgaHjRAnF7jLDSnJaacd7WpX3TD7UP7NwRywdW3RzJHcwLfoNtOCeKt/V6IwCURwlj5TWZCooTOjBNF+8unLBwVfLCoFHUapUjHzE24aZr03+5fvIhWQqIOnPoXp1Zew3FXbeeYi/gnwVML', 'omit': '__omit_place_holder__613ed5dccb55b5f1617fde458af4ae6e919d3422', u'ansible_user_gecos': u'root', u'ansible_processor_threads_per_core': 2, u'ansible_eth0': {u'macaddress': u'ec:f4:bb:d0:f0:d8', u'features': {}, u'speed': 10000, u'pciid': u'0000:01:00.0', u'module': u'ixgbe', u'mtu': 1500, u'active': True, u'promisc': False, u'ipv4': {u'broadcast': u'172.16.111.255', u'netmask': u'255.255.240.0', u'network': u'172.16.96.0', u'address': u'172.16.96.37'}, u'ipv6': [{u'scope': u'link', u'prefix': u'64', u'address': u'fe80::eef4:bbff:fed0:f0d8'}], u'device': u'eth0', u'type': u'ether'}, u'ansible_eth1': {u'macaddress': u'ec:f4:bb:d0:f0:da', u'features': {}, u'pciid': u'0000:01:00.1', u'module': u'ixgbe', u'mtu': 1500, u'active': False, u'promisc': False, u'device': u'eth1', u'type': u'ether'}, u'ansible_system': u'Linux', u'ansible_eth3': {u'macaddress': u'ec:f4:bb:d0:f0:dd', u'features': {}, u'pciid': u'0000:06:00.1', u'module': u'igb', u'mtu': 1500, u'active': False, u'promisc': False, u'device': u'eth3', u'type': u'ether'}, u'ansible_all_ipv4_addresses': [u'172.16.96.37', u'172.17.0.1'], u'ansible_python_version': u'2.7.13', 'ansible_playbook_python': '/home/madelavergne/ombt-orchestrator/venv/bin/python', u'ansible_product_version': u'NA', u'ansible_service_mgr': u'systemd', u'ansible_memory_mb': {u'real': {u'total': 128722, u'free': 126439, u'used': 2283}, u'swap': {u'cached': 0, u'total': 3813, u'free': 3813, u'used': 0}, u'nocache': {u'used': 700, u'free': 128022}}, u'ansible_user_dir': u'/root', u'ansible_real_user_id': 0, u'ansible_ssh_common_args': u'-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null', u'ansible_dns': {u'nameservers': [u'172.16.111.118', u'131.254.203.235'], u'domain': u'rennes.grid5000.fr', u'search': [u'rennes.grid5000.fr', u'grid5000.fr']}, u'ansible_effective_group_id': 0, 'bus_conf': [{'machine': 'paravance-38.rennes.grid5000.fr', 'management_port': 15672, 'port': 5672}], u'ansible_lo': {u'features': {}, u'mtu': 65536, u'active': True, u'promisc': False, u'ipv4': {u'broadcast': u'host', u'netmask': u'255.0.0.0', u'network': u'127.0.0.0', u'address': u'127.0.0.1'}, u'ipv6': [{u'scope': u'host', u'prefix': u'128', u'address': u'::1'}], u'device': u'lo', u'type': u'loopback'}, u'ansible_memtotal_mb': 128722, u'ansible_gather_subset': [u'hardware', u'network', u'virtual'], u'ansible_apparmor': {u'status': u'disabled'}, u'ansible_veth2d3cb70': {u'macaddress': u'e6:18:3a:e3:c6:02', u'features': {}, u'speed': 10000, u'mtu': 1500, u'active': True, u'promisc': True, u'ipv6': [{u'scope': u'link', u'prefix': u'64', u'address': u'fe80::e418:3aff:fee3:c602'}], u'device': u'veth2d3cb70', u'type': u'ether'}, u'ansible_memfree_mb': 126439, u'docker_container': {u'Platform': u'linux', u'State': {u'Status': u'running', u'Pid': 21850, u'OOMKilled': False, u'Dead': False, u'Paused': False, u'Running': True, u'FinishedAt': u'0001-01-01T00:00:00Z', u'Restarting': False, u'Error': u'', u'StartedAt': u'2018-01-29T16:17:58.829321182Z', u'ExitCode': 0}, u'Config': {u'Tty': False, u'Cmd': [u'start', u'--insecure', u'--advertise-host=172.16.96.37', u'--logtostderr'], u'Volumes': None, u'Domainname': u'', u'WorkingDir': u'/cockroach', u'Image': u'cockroachdb/cockroach', u'Hostname': u'paravance-37.rennes.grid5000.fr', u'StdinOnce': False, u'Labels': {}, u'AttachStdin': False, u'User': u'', u'Env': [u'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'], u'ExposedPorts': {u'8080/tcp': {}, u'26257/tcp': {}}, u'OnBuild': None, u'AttachStderr': False, u'Entrypoint': [u'/cockroach/cockroach.sh'], u'AttachStdout': False, u'OpenStdin': False}, u'ResolvConfPath': u'/var/lib/docker/containers/afdbbdd2a630cc7860243a28324fe50a0843c2f7e7cb070ed5b2965bcda5cb17/resolv.conf', u'HostsPath': u'/var/lib/docker/containers/afdbbdd2a630cc7860243a28324fe50a0843c2f7e7cb070ed5b2965bcda5cb17/hosts', u'Args': [u'start', u'--insecure', u'--advertise-host=172.16.96.37', u'--logtostderr'], u'Driver': u'overlay2', u'Path': u'/cockroach/cockroach.sh', u'HostnamePath': u'/var/lib/docker/containers/afdbbdd2a630cc7860243a28324fe50a0843c2f7e7cb070ed5b2965bcda5cb17/hostname', u'RestartCount': 0, u'Name': u'/cockroachdb-master', u'Created': u'2018-01-29T16:17:58.189561132Z', u'ExecIDs': None, u'GraphDriver': {u'Data': {u'MergedDir': u'/var/lib/docker/overlay2/d13481f492635f9c7e89e1a5cc9bed9decc55df01b338da5e3974f06ea886648/merged', u'WorkDir': u'/var/lib/docker/overlay2/d13481f492635f9c7e89e1a5cc9bed9decc55df01b338da5e3974f06ea886648/work', u'LowerDir': u'/var/lib/docker/overlay2/d13481f492635f9c7e89e1a5cc9bed9decc55df01b338da5e3974f06ea886648-init/diff:/var/lib/docker/overlay2/2f8c4750493f9839b5e1c216fa272ba031b060073995af58f33f0efe37bc7995/diff:/var/lib/docker/overlay2/8beef93a7afd7c2b0d4b544e1cc519f1ede47c835f990b54256f353b077f2121/diff:/var/lib/docker/overlay2/acd29ffbbf9063685f2f140af309b5f4337fe9426ae860923f2df9c5c1939b66/diff:/var/lib/docker/overlay2/31509c23a84cabd8f5525a3c9cf6aced084d9d258689f2828e7d0ef467689af5/diff', u'UpperDir': u'/var/lib/docker/overlay2/d13481f492635f9c7e89e1a5cc9bed9decc55df01b338da5e3974f06ea886648/diff'}, u'Name': u'overlay2'}, u'Mounts': [], u'ProcessLabel': u'', u'NetworkSettings': {u'Bridge': u'', u'Networks': {u'bridge': {u'NetworkID': u'85da9b5957060fb5855f5945d9ede036caeb99b3c994b7614fa320c24518bfc8', u'MacAddress': u'02:42:ac:11:00:04', u'GlobalIPv6PrefixLen': 0, u'Links': None, u'GlobalIPv6Address': u'', u'IPv6Gateway': u'', u'Gateway': u'172.17.0.1', u'DriverOpts': None, u'IPPrefixLen': 16, u'EndpointID': u'5207bae51654eb145ad5a9e03588b71ccaead7c6da9450c46b715e92f4c08cf9', u'IPAddress': u'172.17.0.4', u'IPAMConfig': None, u'Aliases': None}}, u'GlobalIPv6PrefixLen': 0, u'LinkLocalIPv6Address': u'', u'HairpinMode': False, u'IPv6Gateway': u'', u'SecondaryIPAddresses': None, u'SandboxID': u'830d0b656cb2b5d652f1ef87ecc119348dc5993a1832f3bf8fa29bf581db9695', u'GlobalIPv6Address': u'', u'LinkLocalIPv6PrefixLen': 0, u'EndpointID': u'5207bae51654eb145ad5a9e03588b71ccaead7c6da9450c46b715e92f4c08cf9', u'SandboxKey': u'/var/run/docker/netns/830d0b656cb2', u'MacAddress': u'02:42:ac:11:00:04', u'SecondaryIPv6Addresses': None, u'IPPrefixLen': 16, u'IPAddress': u'172.17.0.4', u'Gateway': u'172.17.0.1', u'Ports': {u'8080/tcp': None, u'26257/tcp': [{u'HostPort': u'26257', u'HostIp': u'0.0.0.0'}]}}, u'AppArmorProfile': u'', u'Image': u'sha256:988d8c8520b86ffe487914e868efdf40b72883c8e82ff2e621680bc6b0652def', u'LogPath': u'/var/lib/docker/containers/afdbbdd2a630cc7860243a28324fe50a0843c2f7e7cb070ed5b2965bcda5cb17/afdbbdd2a630cc7860243a28324fe50a0843c2f7e7cb070ed5b2965bcda5cb17-json.log', u'HostConfig': {u'CpuPeriod': 0, u'MemorySwappiness': None, u'AutoRemove': False, u'KernelMemory': 0, u'BlkioDeviceReadIOps': None, u'CpuQuota': 0, u'UsernsMode': u'', u'CpuPercent': 0, u'Dns': None, u'Memory': 0, u'PidsLimit': 0, u'DnsSearch': None, u'Privileged': False, u'IOMaximumIOps': 0, u'NanoCpus': 0, u'Ulimits': None, u'CpusetCpus': u'', u'DiskQuota': 0, u'CgroupParent': u'', u'BlkioWeight': 0, u'DeviceCgroupRules': None, u'ContainerIDFile': u'', u'RestartPolicy': {u'MaximumRetryCount': 0, u'Name': u''}, u'OomScoreAdj': 0, u'BlkioDeviceReadBps': None, u'VolumeDriver': u'', u'ReadonlyRootfs': False, u'CpuShares': 0, u'PublishAllPorts': False, u'MemoryReservation': 0, u'BlkioWeightDevice': None, u'ConsoleSize': [0, 0], u'NetworkMode': u'default', u'BlkioDeviceWriteBps': None, u'ExtraHosts': None, u'Isolation': u'', u'GroupAdd': None, u'CpuRealtimeRuntime': 0, u'Devices': None, u'BlkioDeviceWriteIOps': None, u'Binds': [], u'CpusetMems': u'', u'Cgroup': u'', u'UTSMode': u'', u'PidMode': u'', u'Runtime': u'runc', u'VolumesFrom': None, u'CapDrop': None, u'DnsOptions': None, u'ShmSize': 67108864, u'Links': None, u'CpuRealtimePeriod': 0, u'IpcMode': u'shareable', u'PortBindings': {u'26257/tcp': [{u'HostPort': u'26257', u'HostIp': u'0.0.0.0'}]}, u'SecurityOpt': None, u'CapAdd': None, u'CpuCount': 0, u'MemorySwap': 0, u'OomKillDisable': False, u'LogConfig': {u'Config': {}, u'Type': u'json-file'}, u'IOMaximumBandwidth': 0}, u'Id': u'afdbbdd2a630cc7860243a28324fe50a0843c2f7e7cb070ed5b2965bcda5cb17', u'MountLabel': u''}, u'ansible_product_name': u'PowerEdge R630', 'control_bus_conf': [{'machine': 'paravance-37.rennes.grid5000.fr', 'management_port': 15672, 'port': 5672}], u'ansible_processor_count': 2, u'ansible_hostname': u'paravance-37', u'ansible_virtualization_type': u'kvm', u'ansible_interfaces': [u'docker0', u'lo', u'veth2d3cb70', u'eth3', u'eth2', u'eth1', u'eth0'], u'ansible_machine_id': u'535b971430a34ebb850ee6b0a3212044', u'ansible_fqdn': u'paravance-37.rennes.grid5000.fr', u'ansible_mounts': [{u'uuid': u'357fcc83-7b12-42a1-9217-80226e2a08bf', u'size_total': 23489646592, u'mount': u'/', u'size_available': 19936145408, u'fstype': u'ext4', u'device': u'/dev/sda3', u'options': u'rw,relatime,errors=remount-ro,data=ordered'}, {u'uuid': u'7bdec7e9-adf4-4fc6-b765-ef60b25850b2', u'size_total': 547263594496, u'mount': u'/tmp', u'size_available': 518562066432, u'fstype': u'ext4', u'device': u'/dev/sda5', u'options': u'rw,relatime,data=ordered'}, {u'uuid': u'N/A', u'size_total': 10808212062208, u'mount': u'/home', u'size_available': 7020788580352, u'fstype': u'nfs', u'device': u'nfs:/export/home', u'options': u'rw,nosuid,nodev,noatime,vers=3,rsize=32768,wsize=32768,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=172.16.111.24,mountvers=3,mountport=41343,mountproto=udp,local_lock=none,addr=172.16.111.24'}, {u'uuid': u'N/A', u'size_total': 1082125385728, u'mount': u'/grid5000', u'size_available': 652246843392, u'fstype': u'nfs', u'device': u'nfs:/export/grid5000', u'options': u'rw,nosuid,nodev,noatime,vers=3,rsize=32768,wsize=32768,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=172.16.111.24,mountvers=3,mountport=41343,mountproto=udp,local_lock=none,addr=172.16.111.24'}, {u'uuid': u'N/A', u'size_total': 0, u'mount': u'/srv/osirim', u'size_available': 0, u'fstype': u'autofs', u'device': u'/etc/auto.osirim', u'options': u'rw,relatime,fd=6,pgrp=1774,timeout=60,minproto=5,maxproto=5,indirect,pipe_ino=12466'}, {u'uuid': u'357fcc83-7b12-42a1-9217-80226e2a08bf', u'size_total': 23489646592, u'mount': u'/var/lib/docker/plugins', u'size_available': 19936145408, u'fstype': u'ext4', u'device': u'/dev/sda3', u'options': u'rw,relatime,errors=remount-ro,data=ordered,bind'}, {u'uuid': u'357fcc83-7b12-42a1-9217-80226e2a08bf', u'size_total': 23489646592, u'mount': u'/var/lib/docker/overlay2', u'size_available': 19936145408, u'fstype': u'ext4', u'device': u'/dev/sda3', u'options': u'rw,relatime,errors=remount-ro,data=ordered,bind'}], u'ansible_nodename': u'paravance-37.rennes.grid5000.fr', u'ansible_domain': u'rennes.grid5000.fr', u'ansible_date_time': {u'weekday_number': u'1', u'iso8601_basic_short': u'20180129T171650', u'tz': u'CET', u'weeknumber': u'05', u'hour': u'17', u'time': u'17:16:50', u'minute': u'16', u'tz_offset': u'+0100', u'iso8601': u'2018-01-29T16:16:50Z', u'epoch': u'1517242610', u'iso8601_micro': u'2018-01-29T16:16:50.641992Z', u'weekday': u'Monday', u'year': u'2018', u'date': u'2018-01-29', u'month': u'01', u'day': u'29', u'iso8601_basic': u'20180129T171650641923', u'second': u'50'}, u'ansible_processor_cores': 8, u'ansible_bios_version': u'2.2.5', 'playbook_dir': u'/home/madelavergne/ombt-orchestrator/ansible', u'ansible_distribution_release': u'stretch', u'ansible_os_family': u'Debian', u'ansible_effective_user_id': 0, u'ansible_eth2': {u'macaddress': u'ec:f4:bb:d0:f0:dc', u'features': {}, u'pciid': u'0000:06:00.0', u'module': u'igb', u'mtu': 1500, u'active': False, u'promisc': False, u'device': u'eth2', u'type': u'ether'}, u'ansible_devices': {u'sda': {u'scheduler_mode': u'cfq', u'rotational': u'1', u'vendor': u'SEAGATE', u'sectors': u'1172123568', u'sas_device_handle': None, u'sas_address': None, u'host': u'RAID bus controller: LSI Logic / Symbios Logic MegaRAID SAS-3 3008 [Fury] (rev 02)', u'sectorsize': u'512', u'removable': u'0', u'support_discard': u'0', u'model': u'ST600MM0006', u'partitions': {u'sda4': {u'sectorsize': 512, u'uuid': None, u'sectors': u'2', u'start': u'85938176', u'holders': [], u'size': u'1.00 KB'}, u'sda5': {u'sectorsize': 512, u'uuid': u'7bdec7e9-adf4-4fc6-b765-ef60b25850b2', u'sectors': u'1086181376', u'start': u'85940224', u'holders': [], u'size': u'517.93 GB'}, u'sda2': {u'sectorsize': 512, u'uuid': u'910e5a60-3c80-49a7-8d2e-6dd40dc35675', u'sectors': u'31248384', u'start': u'7813120', u'holders': [], u'size': u'14.90 GB'}, u'sda3': {u'sectorsize': 512, u'uuid': u'357fcc83-7b12-42a1-9217-80226e2a08bf', u'sectors': u'46876672', u'start': u'39061504', u'holders': [], u'size': u'22.35 GB'}, u'sda1': {u'sectorsize': 512, u'uuid': u'd186a6bb-1097-43ca-a723-d186c9a68c69', u'sectors': u'7811072', u'start': u'2048', u'holders': [], u'size': u'3.72 GB'}}, u'holders': [], u'size': u'558.91 GB'}, u'sdb': {u'scheduler_mode': u'cfq', u'rotational': u'1', u'vendor': u'SEAGATE', u'sectors': u'1172123568', u'sas_device_handle': None, u'sas_address': None, u'host': u'RAID bus controller: LSI Logic / Symbios Logic MegaRAID SAS-3 3008 [Fury] (rev 02)', u'sectorsize': u'512', u'removable': u'0', u'support_discard': u'0', u'model': u'ST600MM0006', u'partitions': {u'sdb1': {u'sectorsize': 512, u'uuid': u'd58c74b7-ab10-4855-82a4-aa8b6fc006df', u'sectors': u'1172123567', u'start': u'1', u'holders': [], u'size': u'558.91 GB'}}, u'holders': [], u'size': u'558.91 GB'}}, u'ansible_user_uid': 0, u'ansible_ssh_host_key_dsa_public': u'AAAAB3NzaC1kc3MAAACBAIDrH6xmIYt+y87hLkLGwpcpvgEkX8Qg0a31NGnIYsJQzbXnNQZLvYEmN95y/8kCnwCUG3VcjVKLoUPl85kilI5pq1y7qQ73uVvhM3uu4ajIjlyrBfr/Ys4Xwwzh9tY9lhF0SeunqmrTO/xhQ3tw+twx1xFWuh9GvyK8WHAYJICHAAAAFQCfaZovfcK0lMfCDeVMJNPG5x6oeQAAAIB48LTjQRFzMFziUofOFCR3hltX+wJzQCjdYV9WvGzKuCRNUROLcNSysrRNY2uqUNwuIuuWLIULAmPx79BdgjGqRk0cfnRqUbFxeO0efoVxwibkApBp4RVh+jTg5TeyBB8kevVEqMWcQRzi3kwFZO1LICc/EqXi0Of1Q4JFwUVYuQAAAIBSFGHZgUvYIl5KIRCyIJgPP5XIGHAALfdsS8/GuSXdgwZ4y+zeieByIOUe1Cta9OLMDTl2N0y7XSD4jfq4OYZSxF0fU43G4sdzdJlJuP3evXahdXPqCvViR4uO5m7HV837Wcf64alhz3L9Nt/GrCTRcBuL9Z5n+LWjE+O1xNWl6g==', 'registry': {'type': 'internal'}, u'ansible_host': u'paravance-37.rennes.grid5000.fr', u'ansible_bios_date': u'09/06/2016', 'inventory_hostname_short': u'paravance-37', 'inventory_dir': u'/home/madelavergne/ombt-orchestrator/enos_2018-01-29T17:16:22.476005', u'ansible_system_capabilities': [u'cap_chown', u'cap_dac_override', u'cap_dac_read_search', u'cap_fowner', u'cap_fsetid', u'cap_kill', u'cap_setgid', u'cap_setuid', u'cap_setpcap', u'cap_linux_immutable', u'cap_net_bind_service', u'cap_net_broadcast', u'cap_net_admin', u'cap_net_raw', u'cap_ipc_lock', u'cap_ipc_owner', u'cap_sys_module', u'cap_sys_rawio', u'cap_sys_chroot', u'cap_sys_ptrace', u'cap_sys_pacct', u'cap_sys_admin', u'cap_sys_boot', u'cap_sys_nice', u'cap_sys_resource', u'cap_sys_time', u'cap_sys_tty_config', u'cap_mknod', u'cap_lease', u'cap_audit_write', u'cap_audit_control', u'cap_setfcap', u'cap_mac_override', u'cap_mac_admin', u'cap_syslog', u'cap_wake_alarm', u'cap_block_suspend', u'cap_audit_read+ep'], u'ansible_processor': [u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz', u'GenuineIntel', u'Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz'], u'ansible_ssh_user': u'root', u'rabbitmq_port': 5672}"
  }
      #+END_EXAMPLE
    - After a bit more of tweaking, I managed to have the correct configurations and [[https://github.com/Marie-Donnie/ombt-orchestrator/commit/d57a980935874bff4e27935434e1185d5516f3d8][push it]]

- I tried another deployment, just to be sure:
  + on paravance-51 (master), with the last query done after the execution on paravance-52
    #+BEGIN_EXAMPLE
root@paravance-51:~# docker exec -it cockroachdb-master ./cockroach sql --insecure
# Welcome to the cockroach SQL interface.
# All statements must be terminated by a semicolon.
# To exit: CTRL + D.
#
# Server version: CockroachDB CCL v1.1.4 (linux amd64, built 2018/01/08 17:32:42, go1.8.3) (same version as client)
# Cluster ID: d81ff223-de74-4e10-acdf-0d6c958db51f
#
# Enter \? for a brief introduction.
#
root@:26257/> CREATE DATABASE bank;
CREATE DATABASE

Time: 140.48601ms

root@:26257/> CREATE TABLE bank.accounts (id INT PRIMARY KEY, balance DECIMAL);
CREATE TABLE

Time: 132.12233ms

root@:26257/> INSERT INTO bank.accounts VALUES (1, 1000.50);
INSERT 1

Time: 95.999481ms

root@:26257/> SELECT * FROM bank.accounts;
+----+---------+
| id | balance |
+----+---------+
|  1 | 1000.50 |
+----+---------+
(1 row)

Time: 1.693579ms

root@:26257/> SELECT * FROM bank.accounts;
+----+------------+
| id |  balance   |
+----+------------+
|  1 |    1000.50 |
|  2 | 1000000.50 |
+----+------------+
(2 rows)

Time: 1.669241ms

root@:26257/>
    #+END_EXAMPLE
  + and on paravance-52:
    #+BEGIN_EXAMPLE
root@paravance-52:~# docker exec -it cockroachdb-paravance-52 ./cockroach sql --insecure
# Welcome to the cockroach SQL interface.
# All statements must be terminated by a semicolon.
# To exit: CTRL + D.
#
# Server version: CockroachDB CCL v1.1.4 (linux amd64, built 2018/01/08 17:32:42, go1.8.3) (same version as client)
# Cluster ID: d81ff223-de74-4e10-acdf-0d6c958db51f
#
# Enter \? for a brief introduction.
#
root@:26257/> SELECT * FROM bank.accounts;
+----+---------+
| id | balance |
+----+---------+
|  1 | 1000.50 |
+----+---------+
(1 row)

Time: 75.905867ms

root@:26257/> INSERT INTO bank.accounts VALUES (2, 1000000.50);
INSERT 1

Time: 32.039379ms
    #+END_EXAMPLE

- So it seems that it works :)
- Now I have to make it work with Openstack :)))
