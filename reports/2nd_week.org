#+TITLE: Report for : Un intergiciel d’une base de données NewSQL qui considère la localité de l’application cliente -- 2nd week --
#+AUTHOR: Marie Delavergne


* Monday 22 January [2018-01-22 lun.]

- Ronan gave me my assignment:
  - we focus on Keystone for now
    - try and deploy with MySQL on 1 node, then on 5 and then on 25
      - there is a variable in kolla-ansible asking what node to use for the database
	- I can fix it to a name defined in enos (controller = 1 node)
    - then try with cockroachDB

- Reminder
#+name tab:test_plan
:test_plan:
|--------------------------+-----------------------------|
| Parameter name           | Value                       |
|--------------------------+-----------------------------|
| OpenStack release        | Pike                        |
| Database                 | MySQL (Galera), CockroachDB |
| Latency between services | LAN, 10, 50, 100, 300 ms    |
| Cluster size             | 1, 5, 25, 100               |
| Replication              | 1, 3, 5                     |
| Number of clients        | 1 (?)                       |
|--------------------------+-----------------------------|


- Useful links:

  - [[https://enos.readthedocs.io/en/stable/][Enos doc]]
    - to [[https://enos.readthedocs.io/en/stable/customization/index.html#changing-the-topology][change the topology]]
  - [[https://github.com/BeyondTheClouds/enos][Enos repo]]
  - [[https://docs.openstack.org/kolla-ansible/latest/][Kolla-Ansible doc]]
  - [[https://github.com/openstack/kolla-ansible][Kolla-Ansible repo]]
    - all services used are in [[https://github.com/openstack/kolla-ansible/tree/master/ansible/roles][roles]]
    - the [[https://github.com/openstack/kolla-ansible/blob/master/ansible/inventory/multinode][inventory]] defines several variables to be used and overloaded if necessary
      #+BEGIN_SRC
      [mariadb:children]
      control
      #+END_SRC

- First, I jump on a frontend on G5K
- Then, I create a virtualenv to run enos
  #+BEGIN_SRC
  mkdir enos-deployment && cd enos-deployment
  virtualenv venv
  source venv/bin/activate
  pip install -U pip
  pip install enos
  #+END_SRC
- Then, to configure
  #+BEGIN_SRC
  enos new > reservation.yaml
  emacs reservation.yaml
  #+END_SRC
- Realized I've should have done that on a node, so
#+BEGIN_SRC
oarsub -I -l 'walltime=2:00:00'
#+END_SRC
- And on the node
#+BEGIN_SRC
source venv/bin/activate
nano reservation.yaml
enos deploy
#+END_SRC
- Encountered an error - and so it begins -
#+BEGIN_EXAMPLE
INFO:root:Running playbook /home/madelavergne/enos-deployment/venv/lib/python2.7/site-packages/enos/ansible/utils.yml with vars:
{'action': 'ping', 'tc_output_dir': '/home/madelavergne/enos-deployment/enos_2018-01-22T10:52:07.654187'}
 [WARNING]: Found variable using reserved name: action


PLAY [Utils] *******************************************************************************************

TASK [Gathering Facts] *********************************************************************************
fatal: [ip-control-node]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname ip-control-node: Name or service not known\r\n", "unreachable": true}
fatal: [ip-compute-node2]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname ip-compute-node2: Name or service not known\r\n", "unreachable": true}
fatal: [ip-network-node]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname ip-network-node: Name or service not known\r\n", "unreachable": true}
fatal: [ip-compute-node1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname ip-compute-node1: Name or service not known\r\n", "unreachable": true}
	to retry, use: --limit @/home/madelavergne/enos-deployment/venv/lib/python2.7/site-packages/enos/ansible/utils.retry

PLAY RECAP *********************************************************************************************
ip-compute-node1           : ok=0    changed=0    unreachable=1    failed=0
ip-compute-node2           : ok=0    changed=0    unreachable=1    failed=0
ip-control-node            : ok=0    changed=0    unreachable=1    failed=0
ip-network-node            : ok=0    changed=0    unreachable=1    failed=0

{'code': 4, 'result': [{u'ip-network-node': {'unreachable': 1, 'skipped': 0, 'ok': 0, 'changed': 0, 'failures': 0}}, {u'ip-compute-node1': {'unreachable': 1, 'skipped': 0, 'ok': 0, 'changed': 0, 'failures': 0}}, {u'ip-compute-node2': {'unreachable': 1, 'skipped': 0, 'ok': 0, 'changed': 0, 'failures': 0}}, {u'ip-control-node': {'unreachable': 1, 'skipped': 0, 'ok': 0, 'changed': 0, 'failures': 0}}], 'playbook': '/home/madelavergne/enos-deployment/venv/lib/python2.7/site-packages/enos/ansible/utils.yml'}
ERROR:root:Unreachable hosts: [u'ip-network-node', u'ip-compute-node1', u'ip-compute-node2', u'ip-control-node']
INFO:root:Hosts unreachable: [u'ip-network-node', u'ip-compute-node1', u'ip-compute-node2', u'ip-control-node']
INFO:root:Retrying... 1/100
#+END_EXAMPLE
- Let it retry but no better
- Changed the configuration so it would look like more the one given as an example, still not better
#+BEGIN_EXAMPLE
provider:
  type: g5k
  name: 'Enos'
  walltime: 02:00:00
  env_name: jessie-x64-min
  reservation: None
  vlans: '{rennes: "{type=kavlan}/vlan=1"}'
  role_distribution: strict
  single_interface: false
  user: root
#+END_EXAMPLE

- Been asking to Ronan, he told me to remove everything between G5K conf and inventory in the ~reservation.yaml~, so the right configuration looks like:
#+BEGIN_EXAMPLE
# ############################################### #
# Grid'5000 reservation parameters                #
# ############################################### #
provider:
 type: g5k
 name: 'Enos'
 walltime: '02:00:00'
 env_name: debian9-x64-min
 # mandatory : you need to have exacly one vlan
 vlans:
    rennes: "{type='kavlan'}/vlan=1"
 # Be less strict on node distribution especially
 # when nodes are missing in the reservation
 # or not deployed
 role_distribution: debug

# Resources description
resources:
 paravance:
   control: 1
   compute: 1
   database: 1

# ############################################### #
# Inventory to use                                #
# ############################################### #

# This will describe the topology of your services
inventory: inventory-mariadb-out.ini

# ############################################### #
# docker registry parameters
# ############################################### #

# A registry will be deployed and used during the deployment
registry:
 type: internal
 ceph: true
 ceph_keyring: /home/discovery/.ceph/ceph.client.discovery.keyring
 ceph_id: discovery
 ceph_rbd: discovery_kolla_registry/datas
 ceph_mon_host:
   - ceph0.rennes.grid5000.fr
   - ceph1.rennes.grid5000.fr
   - ceph2.rennes.grid5000.fr

# ############################################### #
# Enos Customizations                             #
# ############################################### #
enable_monitoring: no


# ############################################### #
# Kolla parameters                                #
# ############################################### #
# Repository
kolla_repo: "https://git.openstack.org/openstack/kolla-ansible"
kolla_ref: "stable/pike"

# Vars : globals.yml
kolla:
 openstack_release: "osprofiler-stable-pike"
 kolla_base_distro: "centos"
 kolla_install_type: "source"
 docker_namespace: "beyondtheclouds"
 enable_heat: "no"
#+END_EXAMPLE

- I can check in inventories used how the variables are defined
  - in this example, there is a node for database BUT as we saw
      #+BEGIN_SRC
      [mariadb:children]
      control
      #+END_SRC
  - this tells us that mariadb is used on the control node

- Trying to make bench, but got
#+BEGIN_EXAMPLE
enos bench --workload=workload
Traceback (most recent call last):
 File "/home/madelavergne/enos-deployment/venv/bin/enos", line 11, in <module>
   sys.exit(main())
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 774, in main
   bench(**docopt(bench.__doc__, argv=argv))
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 77, in decorated
   fn(*args, **kwargs)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 100, in decorator
   return fn(*args, **kwargs)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 360, in bench
   playbook_values = mk_enos_values(env)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/extra.py", line 301, in mk_enos_values
   get_kolla_required_values(env),
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/extra.py", line 240, in get_kolla_required_values
   'network_interface':          env['eths'][NETWORK_IFACE],
KeyError: 'eths'
#+END_EXAMPLE

- Realized the deployment didn't work really fine
#+BEGIN_EXAMPLE
INFO:execo:Setting ['paravance-66-eth1.rennes.grid5000.fr', 'paravance-56-eth1.rennes.grid5000.fr', 'paravance-64-eth1.rennes.grid5000.fr'] in vlan 4 of site rennes
Traceback (most recent call last):
 File "/home/madelavergne/enos-deployment/venv/bin/enos", line 11, in <module>
   sys.exit(main())
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 766, in main
   deploy(**docopt(deploy.__doc__, argv=argv))
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 77, in decorated
   fn(*args, **kwargs)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 658, in deploy
   up(**kwargs)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 77, in decorated
   fn(*args, **kwargs)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 108, in up
   provider.init(config, kwargs['--force-deploy'])
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/provider/g5k.py", line 50, in init
   vlans)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/provider/g5k.py", line 308, in _mount_cluster_nics
   vlan)
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/execo_g5k/api_utils.py", line 714, in set_nodes_vlan
   return _get_g5k_api().post('/sites/%s/vlans/%s' % (site, str(vlan_id)), json.dumps({"nodes": network_addresses}))
 File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/execo_g5k/api_utils.py", line 203, in post
   raise APIException(uri, 'POST', response, content)
execo_g5k.api_utils.APIException: <APIException uri=u'https://api.grid5000.fr/3.0/sites/rennes/vlans/4' method=POST response={'status': '401', 'content-length': '463', 'server': 'Apache/2.4.25 (Debian)', 'date': 'Mon, 22 Jan 2018 10:49:05 GMT', 'content-type': 'text/html; charset=iso-8859-1', 'www-authenticate': 'Basic realm="Grid\'5000 API"'} content='<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">\n<html><head>\n<title>401 Unauthorized</title>\n</head><body>\n<h1>Unauthorized</h1>\n<p>This server could not verify that you\nare authorized to access the document\nrequested.  Either you supplied the wrong\ncredentials (e.g., bad password), or your\nbrowser doesn\'t understand how to supply\nthe credentials required.</p>\n<hr>\n<address>Apache/2.4.25 (Debian) Server at api.grid5000.fr Port 443</address>\n</body></html>\n'>
#+END_EXAMPLE


- Using the doc for [[https://enos.readthedocs.io/en/2.3.0/provider/grid5000.html#deployment][2.3]] (thanks to Ronan), I can see that I require to add a file and change the setup on the frontend.

- Seems to run smoothly, something must be wrong somewhere.

- Of course, since I only took 2:00:00, I need to do it all over again after eating.

- Working on the files to enable working on 5 and 25 nodes at the same time
  - Copied inventory.sample, changed
      #+BEGIN_SRC
      [mariadb:children]
      database
      #+END_SRC
  - By doing so, I will use the number of nodes declared in the reservation.yaml file, which I also change to 5 and then 25.

- Launched bench (using ~nova-boot-list-cc.yml~)
  - on rally, you can run a [[https://github.com/openstack/rally/blob/master/tasks/openstack/scenario/keystone.yaml][task]]
    - usage: ~rally task validate task.yaml --task-args-file task_arguments.yaml~
  - but there are also the [[https://github.com/openstack/rally/tree/master/samples/tasks/scenarios/keystone][sample tasks]]
  - didn't work for nova scenario but I tested for one keystone scenario and it seemed it has ran smoothly, so I entirely changed the ~run.yml~ to run every scenarios
  - launched the full ~run.yml~
  - backup the reports from ~enos backup~
  - changed the files as stated above
  - relaunched deployment
    - got a problem with my deployment, it used the oargridjob already used, which hadn't enough nodes
    - don't work with ~oardel~ MUST use ~oargriddel <job_number>~ or ~enos destroy --hard~
    - finally got it working with ~oargriddel~
      #+BEGIN_EXAMPLE
      TASK [mariadb : Creating mariadb volume]
      changed: [paravance-6-kavlan-4.rennes.grid5000.fr]
      changed: [paravance-58-kavlan-4.rennes.grid5000.fr]
      changed: [paravance-61-kavlan-4.rennes.grid5000.fr]
      changed: [paravance-66-kavlan-4.rennes.grid5000.fr]
      changed: [paravance-64-kavlan-4.rennes.grid5000.fr]
      #+END_EXAMPLE
    - \o/... wait
      #+BEGIN_EXAMPLE
      FAILED - RETRYING: Waiting for MariaDB service to be ready through VIP (1 retries left).
      FAILED - RETRYING: Waiting for MariaDB service to be ready through VIP (1 retries left).
      FAILED - RETRYING: Waiting for MariaDB service to be ready through VIP (1 retries left).
      FAILED - RETRYING: Waiting for MariaDB service to be ready through VIP (1 retries left).
      FAILED - RETRYING: Waiting for MariaDB service to be ready through VIP (1 retries left).
fatal: [paravance-61-kavlan-4.rennes.grid5000.fr]: FAILED! => {"attempts": 6, "changed": false, "cmd": ["docker", "exec", "mariadb", "mysql", "-h", "10.24.61.255", "-P", "3306", "-u", "haproxy", "-e", "show databases;"], "delta": "0:00:03.237623", "end": "2018-01-22 16:50:44.888256", "failed": true, "rc": 1, "start": "2018-01-22 16:50:41.650633", "stderr": "ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")", "stderr_lines": ["ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")"], "stdout": "", "stdout_lines": []}
fatal: [paravance-58-kavlan-4.rennes.grid5000.fr]: FAILED! => {"attempts": 6, "changed": false, "cmd": ["docker", "exec", "mariadb", "mysql", "-h", "10.24.61.255", "-P", "3306", "-u", "haproxy", "-e", "show databases;"], "delta": "0:00:03.210377", "end": "2018-01-22 16:50:44.926697", "failed": true, "rc": 1, "start": "2018-01-22 16:50:41.716320", "stderr": "ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")", "stderr_lines": ["ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")"], "stdout": "", "stdout_lines": []}
fatal: [paravance-64-kavlan-4.rennes.grid5000.fr]: FAILED! => {"attempts": 6, "changed": false, "cmd": ["docker", "exec", "mariadb", "mysql", "-h", "10.24.61.255", "-P", "3306", "-u", "haproxy", "-e", "show databases;"], "delta": "0:00:03.231754", "end": "2018-01-22 16:50:44.927383", "failed": true, "rc": 1, "start": "2018-01-22 16:50:41.695629", "stderr": "ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")", "stderr_lines": ["ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")"], "stdout": "", "stdout_lines": []}
fatal: [paravance-66-kavlan-4.rennes.grid5000.fr]: FAILED! => {"attempts": 6, "changed": false, "cmd": ["docker", "exec", "mariadb", "mysql", "-h", "10.24.61.255", "-P", "3306", "-u", "haproxy", "-e", "show databases;"], "delta": "0:00:03.269421", "end": "2018-01-22 16:50:44.936793", "failed": true, "rc": 1, "start": "2018-01-22 16:50:41.667372", "stderr": "ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")", "stderr_lines": ["ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")"], "stdout": "", "stdout_lines": []}
fatal: [paravance-6-kavlan-4.rennes.grid5000.fr]: FAILED! => {"attempts": 6, "changed": false, "cmd": ["docker", "exec", "mariadb", "mysql", "-h", "10.24.61.255", "-P", "3306", "-u", "haproxy", "-e", "show databases;"], "delta": "0:00:03.256196", "end": "2018-01-22 16:50:45.010870", "failed": true, "rc": 1, "start": "2018-01-22 16:50:41.754674", "stderr": "ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")", "stderr_lines": ["ERROR 2003 (HY000): Can't connect to MySQL server on '10.24.61.255' (113 \"No route to host\")"], "stdout": "", "stdout_lines": []}
	to retry, use: --limit @/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/kolla/ansible/site.retry

PLAY RECAP *********************************************************************************************
paravance-51-kavlan-4.rennes.grid5000.fr : ok=9    changed=4    unreachable=0    failed=0
paravance-58-kavlan-4.rennes.grid5000.fr : ok=47   changed=23   unreachable=0    failed=1
paravance-6-kavlan-4.rennes.grid5000.fr : ok=38   changed=20   unreachable=0    failed=1
paravance-61-kavlan-4.rennes.grid5000.fr : ok=38   changed=20   unreachable=0    failed=1
paravance-64-kavlan-4.rennes.grid5000.fr : ok=38   changed=20   unreachable=0    failed=1
paravance-66-kavlan-4.rennes.grid5000.fr : ok=38   changed=20   unreachable=0    failed=1
paravance-68-kavlan-4.rennes.grid5000.fr : ok=3    changed=0    unreachable=0    failed=0
Command failed ansible-playbook -i /home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/multinode -e @/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/globals.yml -e @/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/passwords.yml -e CONFIG_DIR=/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602  -e action=deploy /home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/kolla/ansible/site.yml
Traceback (most recent call last):
  File "/home/madelavergne/enos-deployment/venv/bin/enos", line 11, in <module>
    sys.exit(main())
  File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 766, in main
    deploy(**docopt(deploy.__doc__, argv=argv))
  File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 77, in decorated
    fn(*args, **kwargs)
  File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 665, in deploy
    install_os(**kwargs)
  File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 77, in decorated
    fn(*args, **kwargs)
  File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/utils/enostask.py", line 100, in decorator
    return fn(*args, **kwargs)
  File "/home/madelavergne/enos-deployment/venv/local/lib/python2.7/site-packages/enos/enos.py", line 207, in install_os
    check_call(kolla_cmd)
  File "/usr/lib/python2.7/subprocess.py", line 186, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/kolla/tools/kolla-ansible', 'deploy', '-i', '/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/multinode', '--passwords', '/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602/passwords.yml', '--configdir', '/home/madelavergne/enos-deployment/enos_2018-01-22T16:29:36.577602']' returned non-zero exit status 1

      #+END_EXAMPLE
    - nooo *insert here a gif of darth vader*
    - checked the gantt diagram for [[https://intranet.grid5000.fr/oar/Rennes/drawgantt-svg/][Rennes]], I still have those nodes
    - relaunched ~enos deploy~
    - same shit
    - try to redeploy, just in case

- While waiting for the tests to run, I'm trying to do minor changes to my enos
  - Corrected a typo
  - Create different reservation.yaml.sample for different providers (in my case, g5k)
    - Wondering about the usefulness of this...
    - usage: ~enos new grid5000 > reservation.yaml~
    - would require to make a new sample and modify ~enos.py~ each time a provider is added
